<project name="WOMCrimeDataEngine" default="compile" basedir="." xmlns:ivy="antlib:fr.jayasoft.ivy.ant">
    <description>
        Safer Streets (Watch Over Me Crime Data Engine)
    </description>

    <property name="src.dir" location="src"/>
    <property name="build.dir" location="build"/>
    <property name="dist.dir" location="dist"/>
    <property name="web.dir" location="web"/>
    <property name="webinf.dir" location="${web.dir}/WEB-INF"/>
    <property name="lib.dir" location="lib"/>
    <property name="non.ivy.lib.dir" location="non_ivy_lib"/>
    <property name="build.lib.dir" location="build_lib"/>
    <property name="conf.dir" location="conf"/>
    <property name="script.dir" location="script"/>
    <property name="aws.elasticbeanstalk.dir" location="elasticbeanstalk"/>

    <condition property="build.env" value="${build.env}" else="local">
        <isset property="build.env" />
    </condition>
    <property file="${basedir}/${build.env}.properties" />

    <tstamp>
        <format property="TODAY" pattern="yyyyMMdd_HHmmss" />
    </tstamp>

    <ivy:settings file="ivysettings.xml"/>

    <!-- paths used for compilation and run  -->
    <path id="lib.path.id">
        <fileset dir="${lib.dir}"/>
        <fileset dir="${build.lib.dir}"/>
        <fileset dir="${non.ivy.lib.dir}"/>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="resolve" description="Get all dependent libraries with Apache Ivy">
        <ivy:retrieve />
    </target>

    <target name="compile" depends="init" description="Compile the source">
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" debug="true" debuglevel="lines,vars,source" />
        <copy todir="${build.dir}">
            <fileset dir="${conf.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
            <filterchain>
                <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                    <param type="propertiesfile" value="${basedir}/${build.env}.properties"/>
                </filterreader>
            </filterchain>
        </copy>
    </target>

    <target name="dist" depends="compile" description="Prepare distribution file">
        <jar file="${dist.dir}/womdataengine.jar">
            <fileset dir="${build.dir}">
                <exclude name="**/*.properties"/>
                <exclude name="**/*.xml"/>
             </fileset>
        </jar>

        <copy todir="${dist.dir}">
            <fileset dir="${build.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
            <fileset dir="${script.dir}"/>
        </copy>

        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>

        <chmod file="${dist.dir}/*.sh" perm="700"/>
    </target>

    <target name="weaving" depends="dist" description="Perform weaving">
        <java classname="org.eclipse.persistence.tools.weaving.jpa.StaticWeave"
              classpathref="lib.path.id" fork="true">
            <arg line="-loglevel INFO ${build.dir} ${build.dir}"/>
        </java>
    </target>

    <target name="war" depends="weaving" description="Create ${war.name} file">
        <war destfile="${dist.dir}/${war.name}" webxml="${webinf.dir}/web.xml">
            <fileset dir="${web.dir}">
                <exclude name="${webinf.dir}/web.xml"/>
            </fileset>
            <lib dir="${lib.dir}">
                <include name="**/*.jar"/>
                <exclude name="servlet-api-*.jar"/>
                <exclude name="tomcat-*.jar"/>
            </lib>
            <lib dir="${non.ivy.lib.dir}">
                <include name="**/*.jar"/>
            </lib>
            <classes dir="${build.dir}">
                <include name="**/**"/>
            </classes>
        </war>
    </target>

    <target name="docker-prepare" depends="war" description="Prepare deployment ${war.name} to AWS Elastic Beanstalk">
        <copy file="${dist.dir}/${war.name}" todir="${aws.elasticbeanstalk.dir}/webapps"/>
    </target>

    <target name="aws-vpc-nat-start" description="Start EC2 NAT instance to make EC2 private instances have internet connection">
        <echo message="Starting an EC2 NAT Instance..."/>
        <exec executable="aws">
            <arg value="ec2"/>
            <arg value="start-instances"/>
            <arg value="--instance-ids"/>
            <arg value="${aws.vpc.nat.instanceid}"/>
        </exec>
        <echo message="Please don't forget to STOP this EC2 instance after not being used." level="warning"/>
    </target>


    <target name="aws-vpc-nat-stop" description="Stop EC2 NAT instance">
        <echo message="Stopping an EC2 NAT Instance..."/>
        <exec executable="aws">
            <arg value="ec2"/>
            <arg value="stop-instances"/>
            <arg value="--instance-ids"/>
            <arg value="${aws.vpc.nat.instanceid}"/>
        </exec>
    </target>

    <target name="aws-eb-deploy" depends="docker-prepare,aws-vpc-nat-start" description="Deploy ${war.name} to AWS Elastic Beanstalk">
        <exec executable="eb" dir="${aws.elasticbeanstalk.dir}">
            <arg value="deploy"/>
            <arg value="${aws.elasticbeanstalk.env}"/>
            <arg value="-l"/>
            <arg value="${build.env}_${TODAY}"/>
        </exec>
        <exec executable="eb" dir="${aws.elasticbeanstalk.dir}">
            <arg value="open"/>
        </exec>
    </target>

    <target name="clean" description="Clean up build and distribution file">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${aws.elasticbeanstalk.dir}/webapps"/>
        <delete>
            <fileset dir="${lib.dir}" includes="**/*.jar"/>
        </delete>
        <ivy:retrieve />
    </target>

    <target name="report" depends="init" description="Create a report of libraries those were in Apache Ivy">
        <mkdir dir="report" />
        <ivy:resolve type="${ivy.resolve.types}"/>
        <ivy:report todir="report" />
    </target>
    <target name="rollbar-deploy" if="${log4j.appender.rollbar.enabled}" description="Submit deployment info to Rollbar">
        <exec executable="git" outputproperty="git.revision">
            <arg line="log -n 1 --pretty=format:'%H'" />
        </exec>
        <echo message="${git.revision}"></echo>
        <exec executable="curl">
            <arg line="-s https://api.rollbar.com/api/1/deploy/ -F access_token=${log4j.appender.rollbar.apiKey} -F environment=${build.env} -F revision=${git.revision} -F local_username=${user.name}"/>
        </exec>
    </target>
</project>

